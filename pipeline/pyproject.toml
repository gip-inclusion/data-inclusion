[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools", "wheel"]

[tool.ruff.lint]
# see prefixes in https://beta.ruff.rs/docs/rules/
select = [
    "F",  # pyflakes
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "I",  # isort
    "UP",  # pyupgrade
    # Do not enable bandit yet as too many violations are reported.
    # "S",  # bandit
]

[tool.ruff.lint.isort]
section-order = ["future","standard-library","third-party","airflow","first-party","local-folder"]
combine-as-imports = true
known-first-party = ["data_inclusion"]
known-local-folder = ["dags", "dag_utils"]

[tool.ruff.lint.isort.sections]
airflow = ["airflow"]

[tool.pytest.ini_options]
testpaths = [
	"tests/unit",
	"tests/integration",
]
markers = '''
    ban_api: mark test as requiring the base base adresse nationale api
'''

[tool.sqlfluff.core]
dialect = "postgres"
ignore = "templating"
exclude_rules = "layout.long_lines"
templater = "dbt"

[tool.sqlfluff.layout.type.alias_expression]
# https://docs.sqlfluff.com/en/stable/layout.html#aligned-elements
# We want non-default spacing _before_ the alias expressions.
spacing_before = "align"
# We want to align them within the next outer select clause.
# This means for example that alias expressions within the FROM
# or JOIN clause would _not_ be aligned with them.
align_within = "select_clause"
# The point at which to stop searching outward for siblings, which
# in this example would likely be the boundary of a CTE. Stopping
# when we hit brackets is usually a good rule of thumb for this
# configuration.
align_scope = "bracketed"


[tool.sqlfluff.rules.capitalisation.keywords]
capitalisation_policy = "upper"

[tool.sqlfluff.rules.capitalisation.functions]
extended_capitalisation_policy = "upper"

[tool.sqlfluff.rules.capitalisation.literals]
# Null & Boolean Literals
capitalisation_policy = "upper"

[tools.sqlfluff.rules.convention.casting_style]
# SQL type casting
preferred_type_casting_style = "shorthand"

[tool.sqlfluff.templater.dbt]
project_dir = "./pipeline/dbt"
profiles_dir = "./pipeline/dbt"
