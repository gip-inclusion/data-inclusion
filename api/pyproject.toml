[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools", "wheel"]

[project]
requires-python = ">=3.12"
name = "data-inclusion-api"
version = "0.1.0"
authors = [
    { name = "dataâ‹…inclusion", email = "data-inclusion@inclusion.gouv.fr" },
]
readme = "README.md"
dependencies = [
    "alembic>=1.15.2",
    "certifi>=2025.1.31",
    "click>=8.1.8",
    "cryptography>=44.0.2",
    "data-inclusion-schema==1.0.0b8",
    "fastapi>=0.115.12",
    "furl>=2.1.4",
    "geoalchemy2>=0.17.1",
    "geopandas>=1.0.1",
    "gunicorn>=23.0.0",
    "h11>=0.16.0",
    "httpx>=0.28.1",
    "jinja2>=3.1.6",
    "numpy>=2.2.4",
    "pandas>=2.2.3",
    "pendulum>=3.1.0",
    "psycopg2>=2.9.10",
    "pyarrow>=19.0.1",
    "pydantic-settings>=2.8.1",
    "pydantic[email]>=2.11.1",
    "pyjwt>=2.10.1",
    "python-dotenv>=1.1.0",
    "pytz>=2025.2",
    "requests>=2.32.3",
    "s3fs>=2025.5.1",
    "sentry-sdk[fastapi]>=2.25.1",
    "sqlalchemy>=2.0.40",
    "tqdm>=4.67.1",
    "ua-parser[regex]>=1.0",
    "uvicorn[standard]>=0.34.0",
]

[dependency-groups]
dev = ["fastapi-debug-toolbar>=0.6.3", "pre-commit>=4.2.0", "ruff>=0.11.2"]
test = [
    "factory-boy>=3.3.3",
    "faker>=37.1.0",
    "fastapi-debug-toolbar>=0.6.3",
    "locust>=2.33.2",
    "pytest>=8.3.5",
    "pytest-dotenv>=0.5.2",
    "syrupy>=4.9.1",
]

[project.urls]
Home = "https://data.inclusion.gouv.fr"
Source = "https://github.com/gip-inclusion/data-inclusion"

[project.scripts]
data-inclusion-api = "data_inclusion.api.cli:cli"

[tool.setuptools.packages.find]
where = ["src"]
namespaces = true

[tool.setuptools.package-data]
"*" = ["*.md", "*.json"]

[tool.ruff.lint]
# see prefixes in https://beta.ruff.rs/docs/rules/
select = [
    "F",  # pyflakes
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "I",  # isort
    "UP", # pyupgrade
    # Do not enable bandit yet as too many violations are reported.
    # "S",  # bandit
]

[tool.ruff.lint.isort]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "fastapi",
    "first-party",
    "local-folder",
]
combine-as-imports = true
known-first-party = ["data_inclusion"]

[tool.ruff.lint.isort.sections]
fastapi = ["fastapi", "fastapi_pagination"]

[tool.pytest.ini_options]
markers = '''
    with_token: inject token headers in test client
    with_admin_token: inject admin token headers in test client
    settings: override api settings
    feature_deprecated: the marked test is deprecated
'''
testpaths = "tests"
